name: Dart Release Creator
on:
  push:
    branches:
      - 'stable'

jobs:
  upload-release:
    runs-on: ubuntu-18.04
    needs: [build-macos-arm, build-macos-x86, build-linux, build-windows]

    steps:
    - uses: actions/checkout@v1
    - name: Get pubspec version
      run: |
        echo "PUBSPEC_VERSION=$(cat pubspec.yaml | grep ^version: | tr -d 'version: ')" >> $GITHUB_ENV
    - name: create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_KEY }}
      with:
        tag_name: v${{ env.PUBSPEC_VERSION }}
        release_name: Release v${{ env.PUBSPEC_VERSION }}
        body: |-
          See the [full changelog](https://github.com/Flutterando/slidy/blob/master/CHANGELOG.md#322) for changes in earlier releases.
        draft: false
        prerelease: false   
    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: uploads    
    - name: upload macos-x86
      id: upload-macos-x86
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/macos-x86.zip
        asset_name: macos-x86.zip
        asset_content_type: application/zip  
    - name: upload macos-arm
      id: upload-macos-arm
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/macos-arm.zip
        asset_name: macos-arm.zip
        asset_content_type: application/zip  
    - name: upload linux
      id: upload-linux
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/linux.zip
        asset_name: linux.zip
        asset_content_type: application/zip   
    - name: upload windows
      id: upload-windows
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_KEY }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/windows.zip
        asset_name: windows.zip
        asset_content_type: application/zip                        

  build-macos-x86:
    runs-on: macos-11
    strategy:
      matrix:
        sdk: [2.17.5]
    steps:
    - uses: actions/checkout@v1
    - name: Use Dart ${{ matrix.sdk }}
      uses: dart-lang/setup-dart@v1.3
      with:
        sdk: ${{ matrix.sdk }}
    - name: Package get
      run: dart pub get
    - name: Build
      run: dart compile exe bin/main.dart -o slidy
    - name: zip macos-x86 artifact
      run: zip -r macos-x86 slidy
    - name: upload macos-x86 artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: macos-x86.zip

  build-macos-arm:
    runs-on: [self-hosted, macos, ARM64]
    strategy:
      matrix:
        sdk: [2.17.5]
    steps:
    - uses: actions/checkout@v1
    - name: Use Dart ${{ matrix.sdk }}
      uses: dart-lang/setup-dart@v1.3
      with:
        sdk: ${{ matrix.sdk }}
    - name: Package get
      run: dart pub get
    - name: Build
      run: dart compile exe bin/main.dart -o slidy
    - name: zip macos-arm artifact
      run: zip -r macos-arm slidy
    - name: upload macos-arm artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: macos-arm.zip                    

  build-linux:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        sdk: [2.17.5]

    steps:
    - uses: actions/checkout@v1
    - name: Use Dart ${{ matrix.sdk }}
      uses: dart-lang/setup-dart@v1.3
      with:
        sdk: ${{ matrix.sdk }}
    - name: Package get
      run: dart pub get
    - name: Build
      run: dart compile exe bin/main.dart -o slidy
    - name: zip linux artifact
      run: zip -r linux slidy
    - name: upload linux artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: linux.zip       

  build-windows:

    runs-on: windows-2019

    strategy:
      matrix:
        sdk: [2.17.5]

    steps:
    - uses: actions/checkout@v1
    - name: Use Dart ${{ matrix.sdk }}
      uses: dart-lang/setup-dart@v1.3
      with:
        sdk: ${{ matrix.sdk }}
    - name: Package get
      run: dart pub get
    - name: Build
      run: dart compile exe bin/main.dart -o slidy
    - name: zip windows artifact
      run: powershell Compress-Archive slidy windows.zip
    - name: upload windows artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: windows.zip